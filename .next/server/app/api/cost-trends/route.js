"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/cost-trends/route";
exports.ids = ["app/api/cost-trends/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcost-trends%2Froute&page=%2Fapi%2Fcost-trends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcost-trends%2Froute.ts&appDir=%2Froot%2Fgit%2Ffinops_cloud%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2Fgit%2Ffinops_cloud&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcost-trends%2Froute&page=%2Fapi%2Fcost-trends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcost-trends%2Froute.ts&appDir=%2Froot%2Fgit%2Ffinops_cloud%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2Fgit%2Ffinops_cloud&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _root_git_finops_cloud_app_api_cost_trends_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/cost-trends/route.ts */ \"(rsc)/./app/api/cost-trends/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/cost-trends/route\",\n        pathname: \"/api/cost-trends\",\n        filename: \"route\",\n        bundlePath: \"app/api/cost-trends/route\"\n    },\n    resolvedPagePath: \"/root/git/finops_cloud/app/api/cost-trends/route.ts\",\n    nextConfigOutput,\n    userland: _root_git_finops_cloud_app_api_cost_trends_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/cost-trends/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjb3N0LXRyZW5kcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGY29zdC10cmVuZHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZjb3N0LXRyZW5kcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZyb290JTJGZ2l0JTJGZmlub3BzX2Nsb3VkJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZyb290JTJGZ2l0JTJGZmlub3BzX2Nsb3VkJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ0c7QUFDaEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZG9wdGltYS1maW5vcHMvP2M3YjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL3Jvb3QvZ2l0L2Zpbm9wc19jbG91ZC9hcHAvYXBpL2Nvc3QtdHJlbmRzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jb3N0LXRyZW5kcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2Nvc3QtdHJlbmRzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jb3N0LXRyZW5kcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9yb290L2dpdC9maW5vcHNfY2xvdWQvYXBwL2FwaS9jb3N0LXRyZW5kcy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jb3N0LXRyZW5kcy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcost-trends%2Froute&page=%2Fapi%2Fcost-trends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcost-trends%2Froute.ts&appDir=%2Froot%2Fgit%2Ffinops_cloud%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2Fgit%2Ffinops_cloud&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/cost-trends/route.ts":
/*!**************************************!*\
  !*** ./app/api/cost-trends/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n// app/api/cost-trends/route.ts\n\nconst AZURE_REST_URL = process.env.AZURE_MCP_SERVER_URL || \"http://localhost:8000\";\nconst AWS_REST_URL = process.env.MCP_SERVER_URL || \"http://localhost:3001\";\nconst GCP_REST_URL = process.env.GCP_MCP_SERVER_URL || \"http://localhost:3002\";\nasync function callAPI(url, endpoint, args) {\n    const res = await fetch(`${url}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n            \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(args)\n    });\n    if (!res.ok) {\n        throw new Error(`API call failed: ${res.status}`);\n    }\n    return res.json();\n}\n/**\n * GET /api/cost-trends?days=7\n * POST /api/cost-trends - with GCP credentials in body\n * Returns daily cost breakdown for all cloud providers\n */ async function POST(request) {\n    try {\n        const body = await request.json();\n        const days = parseInt(body.days || \"7\", 10);\n        const gcpCredentials = body.gcpCredentials; // { projectId, serviceAccountJson, billingAccountId }\n        const trends = [];\n        // Calculate date ranges for each day\n        const today = new Date();\n        const promises = [];\n        for(let i = days - 1; i >= 0; i--){\n            const date = new Date(today);\n            date.setDate(date.getDate() - i);\n            const dateStr = date.toISOString().split(\"T\")[0];\n            const startDate = new Date(date);\n            startDate.setHours(0, 0, 0, 0);\n            const endDate = new Date(date);\n            endDate.setHours(23, 59, 59, 999);\n            promises.push(fetchDailyCost(dateStr, startDate.toISOString(), endDate.toISOString(), gcpCredentials));\n        }\n        const results = await Promise.allSettled(promises);\n        results.forEach((result, index)=>{\n            const date = new Date(today);\n            date.setDate(date.getDate() - (days - 1 - index));\n            const dateStr = date.toISOString().split(\"T\")[0];\n            if (result.status === \"fulfilled\") {\n                trends.push({\n                    date: dateStr,\n                    ...result.value,\n                    total: result.value.aws + result.value.azure + result.value.gcp\n                });\n            } else {\n                // If fetch failed, add zero data for that day\n                trends.push({\n                    date: dateStr,\n                    aws: 0,\n                    azure: 0,\n                    gcp: 0,\n                    total: 0\n                });\n            }\n        });\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            days,\n            trends\n        });\n    } catch (error) {\n        console.error(\"Error fetching cost trends:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Failed to fetch cost trends\",\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function fetchDailyCost(date, startDateIso, endDateIso, gcpCredentials) {\n    const costs = {\n        aws: 0,\n        azure: 0,\n        gcp: 0\n    };\n    try {\n        // Fetch Azure cost\n        try {\n            const azureData = await callAPI(AZURE_REST_URL, \"/api/cost\", {\n                all_profiles: true,\n                start_date_iso: startDateIso,\n                end_date_iso: endDateIso,\n                group_by: \"ServiceName\"\n            });\n            if (azureData?.accounts_cost_data) {\n                Object.values(azureData.accounts_cost_data).forEach((account)=>{\n                    if (account[\"Total Cost\"]) {\n                        costs.azure += parseFloat(account[\"Total Cost\"]) || 0;\n                    }\n                });\n            }\n        } catch (err) {\n            console.error(`Azure cost fetch failed for ${date}:`, err);\n        }\n        // Fetch AWS cost\n        try {\n            const awsData = await callAPI(AWS_REST_URL, \"/api/cost\", {\n                all_profiles: true,\n                start_date_iso: startDateIso,\n                end_date_iso: endDateIso,\n                group_by: \"SERVICE\"\n            });\n            if (awsData?.accounts_cost_data) {\n                Object.values(awsData.accounts_cost_data).forEach((account)=>{\n                    if (account[\"Total Cost\"]) {\n                        costs.aws += parseFloat(account[\"Total Cost\"]) || 0;\n                    }\n                });\n            }\n        } catch (err) {\n            console.error(`AWS cost fetch failed for ${date}:`, err);\n        }\n        // Fetch GCP cost (estimate from instances) - only if credentials provided\n        if (gcpCredentials?.projectId) {\n            try {\n                const gcpData = await callAPI(GCP_REST_URL, \"/api/cost\", {\n                    projectId: gcpCredentials.projectId,\n                    serviceAccountJson: gcpCredentials.serviceAccountJson,\n                    billingAccountId: gcpCredentials.billingAccountId\n                });\n                if (gcpData?.success && gcpData?.data?.compute) {\n                    const computeData = gcpData.data.compute?.content?.[0]?.text;\n                    if (computeData) {\n                        const instances = JSON.parse(computeData);\n                        if (Array.isArray(instances)) {\n                            const runningInstances = instances.filter((i)=>i.status === \"RUNNING\").length;\n                            // Rough daily estimate: $50/month per instance / 30 days\n                            costs.gcp = runningInstances * 50 / 30;\n                        }\n                    }\n                }\n            } catch (err) {\n                console.error(`GCP cost fetch failed for ${date}:`, err);\n            }\n        }\n    } catch (error) {\n        console.error(`Error fetching daily cost for ${date}:`, error);\n    }\n    return costs;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/cost-trends/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcost-trends%2Froute&page=%2Fapi%2Fcost-trends%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcost-trends%2Froute.ts&appDir=%2Froot%2Fgit%2Ffinops_cloud%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Froot%2Fgit%2Ffinops_cloud&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();