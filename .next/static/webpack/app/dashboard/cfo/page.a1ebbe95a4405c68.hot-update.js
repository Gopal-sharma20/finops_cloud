"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/cfo/page",{

/***/ "(app-pages-browser)/./hooks/useCostTrends.ts":
/*!********************************!*\
  !*** ./hooks/useCostTrends.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCostTrends: function() { return /* binding */ useCostTrends; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n\n/**\n * Fetch historical cost trends\n */ function useCostTrends() {\n    let days = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 7;\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.useQuery)({\n        queryKey: [\n            \"cost-trends\",\n            days\n        ],\n        queryFn: async ()=>{\n            // Get GCP credentials from localStorage if available\n            let gcpCredentials = null;\n            const onboardingData = localStorage.getItem(\"cloudoptima-onboarding\");\n            if (onboardingData) {\n                var _data_credentials;\n                const data = JSON.parse(onboardingData);\n                const gcpCreds = (_data_credentials = data.credentials) === null || _data_credentials === void 0 ? void 0 : _data_credentials.gcp;\n                if (gcpCreds) {\n                    gcpCredentials = {\n                        projectId: gcpCreds.projectId,\n                        billingAccountId: gcpCreds.billingAccountId,\n                        serviceAccountJson: gcpCreds.serviceAccountKey\n                    };\n                }\n            }\n            const response = await fetch(\"/api/cost-trends\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    days,\n                    gcpCredentials\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch cost trends\");\n            }\n            return response.json();\n        },\n        staleTime: 5 * 60 * 1000,\n        refetchOnWindowFocus: false\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZUNvc3RUcmVuZHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFFakQ7O0NBRUMsR0FDTSxTQUFTQztRQUFjQyxPQUFBQSxpRUFBZTtJQUMzQyxPQUFPRiwrREFBUUEsQ0FBQztRQUNkRyxVQUFVO1lBQUM7WUFBZUQ7U0FBSztRQUMvQkUsU0FBUztZQUNQLHFEQUFxRDtZQUNyRCxJQUFJQyxpQkFBaUI7WUFDckIsTUFBTUMsaUJBQWlCQyxhQUFhQyxPQUFPLENBQUM7WUFDNUMsSUFBSUYsZ0JBQWdCO29CQUVERztnQkFEakIsTUFBTUEsT0FBT0MsS0FBS0MsS0FBSyxDQUFDTDtnQkFDeEIsTUFBTU0sWUFBV0gsb0JBQUFBLEtBQUtJLFdBQVcsY0FBaEJKLHdDQUFBQSxrQkFBa0JLLEdBQUc7Z0JBRXRDLElBQUlGLFVBQVU7b0JBQ1pQLGlCQUFpQjt3QkFDZlUsV0FBV0gsU0FBU0csU0FBUzt3QkFDN0JDLGtCQUFrQkosU0FBU0ksZ0JBQWdCO3dCQUMzQ0Msb0JBQW9CTCxTQUFTTSxpQkFBaUI7b0JBQ2hEO2dCQUNGO1lBQ0Y7WUFFQSxNQUFNQyxXQUFXLE1BQU1DLE1BQU8sb0JBQW1CO2dCQUMvQ0MsUUFBUTtnQkFDUkMsU0FBUztvQkFBRSxnQkFBZ0I7Z0JBQW1CO2dCQUM5Q0MsTUFBTWIsS0FBS2MsU0FBUyxDQUFDO29CQUNuQnRCO29CQUNBRztnQkFDRjtZQUNGO1lBRUEsSUFBSSxDQUFDYyxTQUFTTSxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTTtZQUNsQjtZQUNBLE9BQU9QLFNBQVNRLElBQUk7UUFDdEI7UUFDQUMsV0FBVyxJQUFJLEtBQUs7UUFDcEJDLHNCQUFzQjtJQUN4QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2hvb2tzL3VzZUNvc3RUcmVuZHMudHM/NjhhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtcXVlcnlcIjtcblxuLyoqXG4gKiBGZXRjaCBoaXN0b3JpY2FsIGNvc3QgdHJlbmRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VDb3N0VHJlbmRzKGRheXM6IG51bWJlciA9IDcpIHtcbiAgcmV0dXJuIHVzZVF1ZXJ5KHtcbiAgICBxdWVyeUtleTogW1wiY29zdC10cmVuZHNcIiwgZGF5c10sXG4gICAgcXVlcnlGbjogYXN5bmMgKCkgPT4ge1xuICAgICAgLy8gR2V0IEdDUCBjcmVkZW50aWFscyBmcm9tIGxvY2FsU3RvcmFnZSBpZiBhdmFpbGFibGVcbiAgICAgIGxldCBnY3BDcmVkZW50aWFscyA9IG51bGw7XG4gICAgICBjb25zdCBvbmJvYXJkaW5nRGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjbG91ZG9wdGltYS1vbmJvYXJkaW5nJyk7XG4gICAgICBpZiAob25ib2FyZGluZ0RhdGEpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2Uob25ib2FyZGluZ0RhdGEpO1xuICAgICAgICBjb25zdCBnY3BDcmVkcyA9IGRhdGEuY3JlZGVudGlhbHM/LmdjcDtcblxuICAgICAgICBpZiAoZ2NwQ3JlZHMpIHtcbiAgICAgICAgICBnY3BDcmVkZW50aWFscyA9IHtcbiAgICAgICAgICAgIHByb2plY3RJZDogZ2NwQ3JlZHMucHJvamVjdElkLFxuICAgICAgICAgICAgYmlsbGluZ0FjY291bnRJZDogZ2NwQ3JlZHMuYmlsbGluZ0FjY291bnRJZCxcbiAgICAgICAgICAgIHNlcnZpY2VBY2NvdW50SnNvbjogZ2NwQ3JlZHMuc2VydmljZUFjY291bnRLZXksXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2Nvc3QtdHJlbmRzYCwge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBkYXlzLFxuICAgICAgICAgIGdjcENyZWRlbnRpYWxzLFxuICAgICAgICB9KSxcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBjb3N0IHRyZW5kc1wiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSxcbiAgICBzdGFsZVRpbWU6IDUgKiA2MCAqIDEwMDAsIC8vIDUgbWludXRlc1xuICAgIHJlZmV0Y2hPbldpbmRvd0ZvY3VzOiBmYWxzZSxcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsidXNlUXVlcnkiLCJ1c2VDb3N0VHJlbmRzIiwiZGF5cyIsInF1ZXJ5S2V5IiwicXVlcnlGbiIsImdjcENyZWRlbnRpYWxzIiwib25ib2FyZGluZ0RhdGEiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsImdjcENyZWRzIiwiY3JlZGVudGlhbHMiLCJnY3AiLCJwcm9qZWN0SWQiLCJiaWxsaW5nQWNjb3VudElkIiwic2VydmljZUFjY291bnRKc29uIiwic2VydmljZUFjY291bnRLZXkiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJzdHJpbmdpZnkiLCJvayIsIkVycm9yIiwianNvbiIsInN0YWxlVGltZSIsInJlZmV0Y2hPbldpbmRvd0ZvY3VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useCostTrends.ts\n"));

/***/ })

});